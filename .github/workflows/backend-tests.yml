name: "Backend tests: pytest mypy"

on:
  push:
    paths:
      - 'backend/**'
      # Also run if the schema has been updated
      - 'schema/**'
      # Also run if we update this file, or any other workflow
      - '.github/**'

jobs:
  typecheck-and-run-tests:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10']
        # See https://docs.github.com/en/actions/learn-github-actions/contexts#github-context on why we use endsWith
        isMain:
          - ${{ endsWith(github.ref,'/main') }}
        exclude:
          - isMain: false
            python-version: '3.8'
          - isMain: false
            python-version: '3.9'
          - isMain: false
            python-version: '3.10'
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache pip
        # Configure cache for the files that pip downloads. At the end of the steps the path gets cached
        # (if the cache keys doesn't exist yet). If the cache key exists it gets restored in this step.
        uses: actions/cache@v2
        with:
          # This path is specific to Ubuntu
          path: ~/.cache/pip
          key: pip-${{ matrix.python-version }}-${{ hashFiles('backend/requirements.txt', 'backend/requirements-dev.txt') }}
      - name: Install dependencies
        run: |
          cd backend
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
          pip install --require-hashes -r requirements.txt
      - name: Typecheck with mypy
        run: |
          cd backend
          mypy objectiv_backend/
      - name: Test with pytest
        run: |
          cd backend
          make base_schema
          pytest
      - name: Check schema classes
        run: |
          cd backend
          make base_schema
          export PYTHONPATH=.:$PYTHONPATH
          python objectiv_backend/schema/generate_classes.py
          pip install autopep8
          autopep8 -i schema.py
          diff schema.py objectiv_backend/schema/schema.py
